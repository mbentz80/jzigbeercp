!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _stl ! in 
    interface  ! in :_stl
        subroutine stl(y,n,np,ns,nt,nl,isdeg,itdeg,ildeg,nsjump,ntjump,nljump,ni,no,rw,season,trend,work) ! in :_stl:stl.f
            double precision dimension(n), intent(in) :: y
            integer optional,check(len(y)>=n),depend(y) :: n=len(y)
            integer :: np
            integer :: ns
            integer :: nt
            integer :: nl
            integer :: isdeg
            integer :: itdeg
            integer :: ildeg
            integer :: nsjump
            integer :: ntjump
            integer :: nljump
            integer :: ni
            integer :: no
            double precision dimension(n),depend(n), intent(out) :: rw
            double precision dimension(n),depend(n), intent(out) :: season
            double precision dimension(n),depend(n), intent(out) :: trend
            double precision dimension(n+2*np,5),depend(n,np), intent(out) :: work
        end subroutine stl
        subroutine ess(y,n,len_bn,ideg,njump,userw,rw,ys,res) ! in :_stl:stl.f
            double precision dimension(n) :: y
            integer optional,check(len(y)>=n),depend(y) :: n=len(y)
            integer :: len_bn
            integer :: ideg
            integer :: njump
            logical :: userw
            double precision dimension(n),depend(n) :: rw
            double precision dimension(n),depend(n) :: ys
            double precision dimension(n),depend(n) :: res
        end subroutine ess
        subroutine est(y,n,len_bn,ideg,xs,ys,nleft,nright,w,userw,rw,ok) ! in :_stl:stl.f
            double precision dimension(n) :: y
            integer optional,check(len(y)>=n),depend(y) :: n=len(y)
            integer :: len_bn
            integer :: ideg
            double precision :: xs
            double precision :: ys
            integer :: nleft
            integer :: nright
            double precision dimension(n),depend(n) :: w
            logical :: userw
            double precision dimension(n),depend(n) :: rw
            logical :: ok
        end subroutine est
        subroutine fts(x,n,np,trend,work) ! in :_stl:stl.f
            double precision dimension(n) :: x
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            integer :: np
            double precision dimension(n),depend(n) :: trend
            double precision dimension(n),depend(n) :: work
        end subroutine fts
        subroutine ma(x,n,len_bn,ave) ! in :_stl:stl.f
            double precision dimension(n) :: x
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            integer :: len_bn
            double precision dimension(n),depend(n) :: ave
        end subroutine ma
        subroutine onestp(y,n,np,ns,nt,nl,isdeg,itdeg,ildeg,nsjump,ntjump,nljump,ni,userw,rw,season,trend,work) ! in :_stl:stl.f
            double precision dimension(n), intent(in) :: y
            integer optional,check(len(y)>=n),depend(y) :: n=len(y)
            integer intent(in) :: np
            integer intent(in) :: ns
            integer intent(in) :: nt
            integer intent(in) :: nl
            integer intent(in) :: isdeg
            integer intent(in) :: itdeg
            integer intent(in) :: ildeg
            integer intent(in) :: nsjump
            integer intent(in) :: ntjump
            integer intent(in) :: nljump
            integer intent(in) :: ni
            logical intent(in) :: userw
            double precision dimension(n),depend(n), intent(out) :: rw
            double precision dimension(n),depend(n), intent(out) :: season
            double precision dimension(n),depend(n), intent(out) :: trend
            double precision dimension(n+2*np,5),depend(n,np), intent(out) :: work
        end subroutine onestp
        subroutine rwts(y,n,fit,rw) ! in :_stl:stl.f
            double precision dimension(n) :: y
            integer optional,check(len(y)>=n),depend(y) :: n=len(y)
            double precision dimension(n),depend(n) :: fit
            double precision dimension(n),depend(n) :: rw
        end subroutine rwts
        subroutine ss(y,n,np,ns,isdeg,nsjump,userw,rw,season,work1,work2,work3,work4) ! in :_stl:stl.f
            double precision dimension(n) :: y
            integer optional,check(len(y)>=n),depend(y) :: n=len(y)
            integer :: np
            integer :: ns
            integer :: isdeg
            integer :: nsjump
            logical :: userw
            double precision dimension(n),depend(n) :: rw
            double precision dimension(n+2*np),depend(n,np) :: season
            double precision dimension(n),depend(n) :: work1
            double precision dimension(n),depend(n) :: work2
            double precision dimension(n),depend(n) :: work3
            double precision dimension(n),depend(n) :: work4
        end subroutine ss
        subroutine stlez(y,n,np,ns,isdeg,itdeg,robust,no,rw,season,trend,work) ! in :_stl:stl.f
            double precision dimension(n) :: y
            integer optional,check(len(y)>=n),depend(y) :: n=len(y)
            integer :: np
            integer :: ns
            integer :: isdeg
            integer :: itdeg
            logical :: robust
            integer :: no
            double precision dimension(n),depend(n) :: rw
            double precision dimension(n),depend(n) :: season
            double precision dimension(n),depend(n) :: trend
            double precision dimension(n+2*np,7),depend(n,np) :: work
        end subroutine stlez
        subroutine psort(a,n,ind,ni) ! in :_stl:stl.f
            double precision dimension(n) :: a
            integer optional,check(len(a)>=n),depend(a) :: n=len(a)
            integer dimension(ni) :: ind
            integer optional,check(len(ind)>=ni),depend(ind) :: ni=len(ind)
        end subroutine psort
    end interface 
end python module _stl

! This file was auto-generated with f2py (version:2_3522).
! See http://cens.ioc.ee/projects/f2py2e/
